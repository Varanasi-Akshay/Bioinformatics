tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
p<-ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
calc_auc(p)
lr_data <- data.frame(predictor = glm.out$linear.predictors, prob = glm.out$fitted.values, NCbirths)
ggplot(lr_data, aes(x = predictor, y = prob, color = factor(Premie))) + geom_point() + scale_color_colorblind()
# make a data-frame with probabilities and premature births
pred_data <- data.frame(probability = glm.out$fitted.values, Premie = NCbirths$Premie)
# cutoff of 0.50
cutoff <- 0.50
# number of premature babies identified as premature (true positives)
pred_data %>%
filter(probability > cutoff & Premie == 1) %>%
tally() -> premie_true
# number of babies carried to term identified as babies carried to term (true negatives)
pred_data %>%
filter(probability <= cutoff & Premie == 0) %>%
tally() -> term_true
# total number of premature babies (known postives)
pred_data %>%
filter(Premie == 1) %>%
tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
p<-ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) #+
#coord_fixed() +
#scale_color_colorblind()
calc_auc(p)
lr_data <- data.frame(predictor = glm.out$linear.predictors, prob = glm.out$fitted.values, NCbirths)
ggplot(lr_data, aes(x = predictor, y = prob, color = factor(Premie))) + geom_point() + scale_color_colorblind()
# make a data-frame with probabilities and premature births
pred_data <- data.frame(probability = glm.out$fitted.values, Premie = NCbirths$Premie)
# cutoff of 0.50
cutoff <- 0.50
# number of premature babies identified as premature (true positives)
pred_data %>%
filter(probability > cutoff & Premie == 1) %>%
tally() -> premie_true
# number of babies carried to term identified as babies carried to term (true negatives)
pred_data %>%
filter(probability <= cutoff & Premie == 0) %>%
tally() -> term_true
# total number of premature babies (known postives)
pred_data %>%
filter(Premie == 1) %>%
tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
p<-ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) #+
#coord_fixed() +
#scale_color_colorblind()
p
calc_auc(p)
lr_data <- data.frame(predictor = glm.out$linear.predictors, prob = glm.out$fitted.values, NCbirths)
ggplot(lr_data, aes(x = predictor, y = prob, color = factor(Premie))) + geom_point() + scale_color_colorblind()
# make a data-frame with probabilities and premature births
pred_data <- data.frame(probability = glm.out$fitted.values, Premie = NCbirths$Premie)
# cutoff of 0.50
cutoff <- 0.50
# number of premature babies identified as premature (true positives)
pred_data %>%
filter(probability > cutoff & Premie == 1) %>%
tally() -> premie_true
# number of babies carried to term identified as babies carried to term (true negatives)
pred_data %>%
filter(probability <= cutoff & Premie == 0) %>%
tally() -> term_true
# total number of premature babies (known postives)
pred_data %>%
filter(Premie == 1) %>%
tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
glm.out2 <- glm(Premie ~ Marital + MomAge, data = NCbirths, family = "binomial")
library(knitr)
opts_chunk$set(fig.align = "center", fig.height = 4, fig.width = 6)
library(tidyverse)
theme_set(theme_bw(base_size = 12))
library(ggthemes) # for scale_color_colorblind()
library(plotROC) # for geom_roc() and calc_auc()
NCbirths <- read_csv("http://wilkelab.org/classes/SDS348/data_sets/NCbirths.csv")
head(NCbirths)
glm.out <- glm(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, family = "binomial")
summary(glm.out)
lr_data <- data.frame(predictor = glm.out$linear.predictors, prob = glm.out$fitted.values, NCbirths)
ggplot(lr_data, aes(x = predictor, y = prob, color = factor(Premie))) + geom_point() + scale_color_colorblind()
# make a data-frame with probabilities and premature births
pred_data <- data.frame(probability = glm.out$fitted.values, Premie = NCbirths$Premie)
# cutoff of 0.50
cutoff <- 0.50
# number of premature babies identified as premature (true positives)
pred_data %>%
filter(probability > cutoff & Premie == 1) %>%
tally() -> premie_true
# number of babies carried to term identified as babies carried to term (true negatives)
pred_data %>%
filter(probability <= cutoff & Premie == 0) %>%
tally() -> term_true
# total number of premature babies (known postives)
pred_data %>%
filter(Premie == 1) %>%
tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
glm.out2 <- glm(Premie ~ Marital + MomAge, data = NCbirths, family = "binomial")
df2 <- data.frame(
predictor = predict(glm.out2, NCbirths),
known_truth = NCbirths$Premie,
model = "model2"
)
df_combined <- bind_rows(df1, df2)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
p <- ggplot(df_combined, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() + scale_color_colorblind()
p
# calculate AUC
calc_auc(p)
model <- unique(df_combined$model)
model_info <- data.frame(
model,
group = order(model)
)
left_join(model_info, calc_auc(p)) %>%
select(-group, -PANEL) %>%
arrange(desc(AUC))
library(knitr)
opts_chunk$set(fig.align = "center", fig.height = 5, fig.width = 6)
library(tidyverse)
theme_set(theme_bw(base_size = 12))
library(ggthemes)
library(tidyverse)
theme_set(theme_bw(base_size = 12)) # set default ggplot2 theme
library(ggthemes)
library(Stat2Data)
library(plotROC)
data(NCbirths)
NCbirths <- na.omit(NCbirths)
#NCbirths <- read_csv("http://wilkelab.org/classes/SDS348/data_sets/NCbirths.csv")
#
# NCbirths$Sex[NCbirths$Sex=='1']<-'0'
# NCbirths$Sex[NCbirths$Sex=='2']<-'1'
# NCbirths$Sex<-as.numeric(NCbirths$Sex)
head(NCbirths)
glm.out <- glm(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, family = "binomial")
summary(glm.out)
lr_data <- data.frame(predictor = glm.out$linear.predictors, prob = glm.out$fitted.values, NCbirths)
ggplot(lr_data, aes(x = predictor, y = prob, color = factor(Premie))) + geom_point() + scale_color_colorblind()
# make a data-frame with probabilities and premature births
pred_data <- data.frame(probability = glm.out$fitted.values, Premie = NCbirths$Premie)
# cutoff of 0.50
cutoff <- 0.50
# number of premature babies identified as premature (true positives)
pred_data %>%
filter(probability > cutoff & Premie == 1) %>%
tally() -> premie_true
# number of babies carried to term identified as babies carried to term (true negatives)
pred_data %>%
filter(probability <= cutoff & Premie == 0) %>%
tally() -> term_true
# total number of premature babies (known postives)
pred_data %>%
filter(Premie == 1) %>%
tally() -> premie_total
# total number of babies carried to term (known negatives)
pred_data %>%
filter(Premie == 0) %>%
tally() -> term_total
# true positive rate
tp <- premie_true$n / (premie_total$n)
# true negative rate
tn <- term_true$n / (term_total$n)
tp
# false positive rate (1 - true negative rate)
(1 - tn)
df1 <- data.frame(
predictor = predict(glm.out, NCbirths),
known_truth = NCbirths$Premie,
model = "model1"
)
# plot
# the aesthetic names are not the most intuitive
# `d` (disease) holds the known truth
# `m` (marker) holds the predictor values
p<-ggplot(df1, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
p
calc_auc(p)
library(caret)
#train_fraction <- 0.4 # fraction of data for training purposes
set.seed(126) # set the seed to make the partition reproductible
#train_size <- floor(train_fraction * nrow(biopsy)) # number of observations in training set
#train_indices <- sample(1:nrow(biopsy), size = train_size)
#train_data <- biopsy[train_indices, ] # get training data
#test_data <- biopsy[-train_indices, ] # get test data
trainIndex <- createDataPartition(NCbirths$Sex, p = 0.5,
list = FALSE,
times = 1)
head(NCbirths)
NCbirths$Premie <- as.factor(NCbirths$Premie)
NCbirthsTrain <- NCbirths[ trainIndex,]
NCbirthsTest  <- NCbirths[-trainIndex,]
head(NCbirths)
glmFit1 <- train(Premie ~ Plural + BirthWeightGm + Gained , data = NCbirths, method="glm", family="binomial")
#summary(glmFit1)
pred<-predict(glmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df2 <- data.frame(
predictor = pred,
known_truth = NCbirths$Premie,
model = "model2"
)
ggplot(df2, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
head(df2)
#summary(glmFit1)
pred<-predict(glmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df2 <- data.frame(
predictor = pred,
known_truth = NCbirths$Premie,
model = "model2"
)
ggplot(df2, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
head(df2)
#summary(glmFit1)
pred<-predict(glmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df2 <- data.frame(
predictor = pred,
known_truth = NCbirths$Premie,
model = "model2"
)
ggplot(df2, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
head(df2)
#summary(glmFit1)
pred<-predict(glmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df2 <- data.frame(
predictor = pred,
known_truth = NCbirths$Premie,
model = "model2"
)
q<-ggplot(df2, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
q
calc_auc(q)
head(df2)
#summary(glmFit1)
pred<-predict(glmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df2 <- data.frame(
predictor = as.numeric(pred),
known_truth = as.numeric(NCbirths$Premie),
model = "model2"
)
q<-ggplot(df2, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
q
calc_auc(q)
head(df2)
# K-means clustering
NCbirths %>% select(Plural,BirthWeightGm,Gained) %>% kmeans(centers = 2) -> km
gbmFit1 <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirthsTrain, method="gbm", verbose = FALSE)
pred2<-predict(gbmFit1, newdata=NCbirthsTest)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df3 <- data.frame(
predictor = as.numeric(pred),
known_truth = as.numeric(NCbirthsTest$Sex),
model = "model2"
)
gbmFit1 <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirthsTrain, method="gbm", verbose = FALSE)
pred2<-predict(gbmFit1, newdata=NCbirthsTest)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df3 <- data.frame(
predictor = pred2,
known_truth = NCbirthsTest$Premie,
model = "model2"
)
r<-ggplot(df3, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
r
calc_auc(r)
gbmFit1 <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirthsTrain, method="gbm", verbose = FALSE)
pred2<-predict(gbmFit1, newdata=NCbirthsTest)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df3 <- data.frame(
predictor = as.numeric(pred2),
known_truth = as.numeric(NCbirthsTest$Premie),
model = "model2"
)
r<-ggplot(df3, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
r
calc_auc(r)
gbmFit1 <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, method="gbm", verbose = FALSE)
pred2<-predict(gbmFit1, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df3 <- data.frame(
predictor = as.numeric(pred2),
known_truth = as.numeric(NCbirths$Premie),
model = "model2"
)
r<-ggplot(df3, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
r
calc_auc(r)
## SVM kernel radial
svmfit <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, method="svmRadial", verbose = FALSE)
pred3<-predict(svmfit, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df4 <- data.frame(
predictor = as.numeric(pred3),
known_truth = as.numeric(NCbirths$Premie),
model = "model4"
)
j<-ggplot(df4, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
j
calc_auc(j)
## SVM kernel radial
svmfit <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, method="svmLinear", verbose = FALSE)
pred3<-predict(svmfit, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df4 <- data.frame(
predictor = as.numeric(pred3),
known_truth = as.numeric(NCbirths$Premie),
model = "model4"
)
j<-ggplot(df4, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
j
calc_auc(j)
## SVM kernel radial
svmfit <- train(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths, method="svmRadial", verbose = FALSE)
pred3<-predict(svmfit, newdata=NCbirths)
#dim(pred)
#accuracy <- table(pred, NCbirthsTest$Sex)
#sum(diag(accuracy))/sum(accuracy)
df4 <- data.frame(
predictor = as.numeric(pred3),
known_truth = as.numeric(NCbirths$Premie),
model = "model4"
)
j<-ggplot(df4, aes(d = known_truth, m = predictor, color = model)) +
geom_roc(n.cuts = 0) +
coord_fixed() +
scale_color_colorblind()
j
calc_auc(j)
install.packages("randomForest")
rffit<-randomForest(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths)
library(randomForest)
rffit<-randomForest(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths)
library(dplyr)
rffit<-randomForest(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths)
library(dplyr)
rffit<-randomForest(Premie ~ Plural + BirthWeightGm + Gained, data = NCbirths)
summary(rffit)
